% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learn_theta.R
\name{learn_theta}
\alias{learn_theta}
\title{Learn nuisance function: conditional mean of outcome given baseline
covariates and treatment}
\usage{
learn_theta(
  W,
  A,
  Y,
  delta,
  controls_only,
  method,
  folds,
  family,
  theta_bounds,
  cross_fit_nuisance = TRUE
)
}
\arguments{
\item{W}{A matrix of baseline covariates.}

\item{A}{A vector of treatment indicators.}

\item{Y}{A vector of outcomes.}

\item{controls_only}{A logical indicating whether the external data has only
control-arm observations.}

\item{method}{Learning method. \code{"glm"} for main-term linear model,
\code{"glmnet"} for lasso, or a \code{list} of \code{sl3} learners for
super learner-based estimation.}

\item{family}{A character string specifying the family of the outcome
\eqn{Y}. Either \code{"gaussian"} or \code{"binomial"}.}

\item{theta_bounds}{A numeric vector of lower and upper bounds for the
conditional mean of outcome given baseline covariates and treatment.
The first element is the lower bound, and the second element is the upper
bound.}

\item{v_folds}{A numeric of number of folds for cross-validation
(when necessary).}
}
\value{
A numeric vector of the estimated values.
}
\description{
Function to learn the conditional mean of outcome given
baseline covariates and treatment,
\eqn{\theta(W,A)=\mathbb{E}(Y\mid W,A)}.
}
\examples{
# simulate data
set.seed(123)
n <- 500
S <- rbinom(n, 1, 0.5)
W1 <- rnorm(n)
W2 <- rnorm(n)
W <- cbind(W1, W2)
A <- numeric(n)
A[S == 1] <- rbinom(sum(S), 1, 0.67)
A[S == 0] <- rbinom(n - sum(S), 1, plogis(1.2 * W1 - 0.9 * W2))
UY <- rnorm(n, 0, 1)
U_bias <- rnorm(n, 0, 0.5)
Y <- -0.5 - 0.8 * W1 - 1.1 * W2 + 1.5 * A + UY + (1 - S) * (0.9 + 2.6 * W1) + (1 - S) * U_bias

theta <- learn_theta(W, A, Y, FALSE, "glm", 5, "gaussian", c(-4, 4))
}
\keyword{nuisance}
