
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> .libPaths(c("/global/home/users/skyqiu/R/x86_64-pc-linux-gnu-library/4.2",
+             .libPaths()))
> library(devtools)
Loading required package: usethis
Error in .make_numeric_version(x, strict, .standard_regexps()$valid_numeric_version) : 
  invalid non-character version specification 'x' (type: double)
> library(tmle)
Loading required package: glmnet
Loading required package: Matrix
Loaded glmnet 4.1-6
Loading required package: SuperLearner
Loading required package: nnls
Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.22-1

Super Learner
Version: 2.0-28
Package created on 2021-05-04

Welcome to the tmle package, version 1.5.0-1.1

Major changes since v1.3.x. Use tmleNews() to see details on changes and bug fixes
> library(torch)
> library(hal9001)
Loading required package: Rcpp
hal9001 v0.4.5: The Scalable Highly Adaptive Lasso
note: fit_hal defaults have changed. See ?fit_hal for details
> library(furrr)
Loading required package: future
> library(doMC)
Loading required package: iterators
Loading required package: parallel
> library(origami)
origami v1.0.7: Generalized Framework for Cross-Validation
> load_all()
ℹ Loading atmle

Attaching package: ‘purrr’

The following object is masked from ‘package:data.table’:

    transpose

The following objects are masked from ‘package:foreach’:

    accumulate, when

> source("sim_data.R")
> set.seed(923845)
> plan(multisession, workers = availableCores()-1)
> registerDoMC(cores = availableCores()-1)
> ate <- get_truth()
> `%+%` <- function(a, b) paste0(a, b)
> timestamp <- format(Sys.Date(), "%m%d") %+% "_" %+% format(Sys.time(), "%H%M%S")
> 
> # simulation parameters
> B <- 200
> n_seq <- seq(500, 2000, 500)
> 
> res_df <- map_dfr(n_seq, function(n) {
+   map_dfr(seq(B), function(b) {
+     print("n = " %+% n %+% ", B = " %+% b)
+     data <- sim_data(n)
+     W <- colnames(data)[grep("W", colnames(data))]
+ 
+     # SEQ-A-TMLE
+     res_atmle <- atmle_ate_torch(data = data,
+                                  W = W,
+                                  A = "A",
+                                  Y = "Y",
+                                  eic_method = "svd_pseudo_inv",
+                                  lr = 1e-2,
+                                  family = "gaussian",
+                                  browse = FALSE,
+                                  parallel = TRUE)
+     tmp_df <- map_dfr(res_atmle, function(.x) {
+       return(data.frame(psi = .x$psi,
+                         lower = .x$lower,
+                         upper = .x$upper,
+                         PnEIC = .x$PnEIC,
+                         sn = .x$sn))
+     })
+     min_var_idx <- which.min(tmp_df$upper - tmp_df$lower)
+ 
+     # HAL-TMLE
+     g_basis_list <- enumerate_basis(x = data[, W, drop = FALSE],
+                                     max_degree = 2,
+                                     smoothness_orders = 1)
+     g_design_mat <- make_design_matrix(X = as.matrix(data[, W, drop = FALSE]),
+                                        blist = g_basis_list)
+     g_fit <- cv.glmnet(x = g_design_mat,
+                        y = data$A,
+                        family = "binomial",
+                        alpha = 1,
+                        nlambda = 50,
+                        nfolds = 10,
+                        parallel = TRUE)
+     g1W <- as.numeric(predict(g_fit, newx = g_design_mat, s = "lambda.min", type = "response"))
+     Q_basis_list <- enumerate_basis(x = data[, c(W, "A"), drop = FALSE],
+                                     max_degree = 2,
+                                     smoothness_orders = 1)
+     Q1_counter <- cbind(data[, W, drop = FALSE], A = 1)
+     Q0_counter <- cbind(data[, W, drop = FALSE], A = 0)
+     Q_design_mat <- make_design_matrix(X = as.matrix(data[, c(W, "A"), drop = FALSE]),
+                                        blist = Q_basis_list)
+     Q1_design_mat <- make_design_matrix(X = as.matrix(Q1_counter),
+                                        blist = Q_basis_list)
+     Q0_design_mat <- make_design_matrix(X = as.matrix(Q0_counter),
+                                        blist = Q_basis_list)
+     Q_fit <- cv.glmnet(x = Q_design_mat,
+                        y = data$Y,
+                        family = "gaussian",
+                        alpha = 1,
+                        nlambda = 50,
+                        nfolds = 10,
+                        parallel = TRUE)
+     Q0_init <- as.numeric(predict(Q_fit, newx = Q0_design_mat, s = "lambda.min"))
+     Q1_init <- as.numeric(predict(Q_fit, newx = Q1_design_mat, s = "lambda.min"))
+     tmle_res <- tmle(W = as.matrix(data[, W, drop = FALSE]),
+                      A = as.numeric(data$A),
+                      Y = as.numeric(data$Y),
+                      family = "gaussian",
+                      Q = cbind(Q0_init, Q1_init),
+                      g1W = g1W)
+ 
+     return(data.frame(b = b,
+                       n = n,
+                       selector = c("relax", "min_var", "TMLE"),
+                       psi = c(tmp_df$psi[1], tmp_df$psi[min_var_idx], tmle_res$estimates$ATE$psi),
+                       lower = c(tmp_df$lower[1], tmp_df$lower[min_var_idx], tmle_res$estimates$ATE$CI[1]),
+                       upper = c(tmp_df$upper[1], tmp_df$upper[min_var_idx], tmle_res$estimates$ATE$CI[2]),
+                       PnEIC = c(tmp_df$PnEIC[1], tmp_df$PnEIC[min_var_idx], mean(tmle_res$estimates$IC$IC.ATE)),
+                       sn = c(tmp_df$sn[1], tmp_df$sn[min_var_idx], NA)))
+   })
+ })
[1] "n = 500, B = 1"
[1] "n = 500, B = 2"
[1] "n = 500, B = 3"
[1] "n = 500, B = 4"
[1] "n = 500, B = 5"
[1] "n = 500, B = 6"
[1] "n = 500, B = 7"
[1] "n = 500, B = 8"
[1] "n = 500, B = 9"
[1] "n = 500, B = 10"
[1] "n = 500, B = 11"
[1] "n = 500, B = 12"
[1] "n = 500, B = 13"
[1] "n = 500, B = 14"
[1] "n = 500, B = 15"
[1] "n = 500, B = 16"
[1] "n = 500, B = 17"
[1] "n = 500, B = 18"
[1] "n = 500, B = 19"
[1] "n = 500, B = 20"
[1] "n = 500, B = 21"
[1] "n = 500, B = 22"
[1] "n = 500, B = 23"
[1] "n = 500, B = 24"
[1] "n = 500, B = 25"
[1] "n = 500, B = 26"
[1] "n = 500, B = 27"
[1] "n = 500, B = 28"
[1] "n = 500, B = 29"
[1] "n = 500, B = 30"
[1] "n = 500, B = 31"
[1] "n = 500, B = 32"
[1] "n = 500, B = 33"
[1] "n = 500, B = 34"
[1] "n = 500, B = 35"
[1] "n = 500, B = 36"
[1] "n = 500, B = 37"
[1] "n = 500, B = 38"
[1] "n = 500, B = 39"
[1] "n = 500, B = 40"
[1] "n = 500, B = 41"
[1] "n = 500, B = 42"
[1] "n = 500, B = 43"
[1] "n = 500, B = 44"
[1] "n = 500, B = 45"
[1] "n = 500, B = 46"
[1] "n = 500, B = 47"
[1] "n = 500, B = 48"
[1] "n = 500, B = 49"
[1] "n = 500, B = 50"
[1] "n = 500, B = 51"
[1] "n = 500, B = 52"
[1] "n = 500, B = 53"
[1] "n = 500, B = 54"
[1] "n = 500, B = 55"
[1] "n = 500, B = 56"
[1] "n = 500, B = 57"
[1] "n = 500, B = 58"
[1] "n = 500, B = 59"
[1] "n = 500, B = 60"
[1] "n = 500, B = 61"
[1] "n = 500, B = 62"
[1] "n = 500, B = 63"
[1] "n = 500, B = 64"
[1] "n = 500, B = 65"
[1] "n = 500, B = 66"
[1] "n = 500, B = 67"
[1] "n = 500, B = 68"
[1] "n = 500, B = 69"
[1] "n = 500, B = 70"
[1] "n = 500, B = 71"
[1] "n = 500, B = 72"
[1] "n = 500, B = 73"
[1] "n = 500, B = 74"
[1] "n = 500, B = 75"
[1] "n = 500, B = 76"
[1] "n = 500, B = 77"
[1] "n = 500, B = 78"
[1] "n = 500, B = 79"
[1] "n = 500, B = 80"
[1] "n = 500, B = 81"
[1] "n = 500, B = 82"
[1] "n = 500, B = 83"
[1] "n = 500, B = 84"
[1] "n = 500, B = 85"
[1] "n = 500, B = 86"
[1] "n = 500, B = 87"
[1] "n = 500, B = 88"
[1] "n = 500, B = 89"
[1] "n = 500, B = 90"
[1] "n = 500, B = 91"
[1] "n = 500, B = 92"
[1] "n = 500, B = 93"
[1] "n = 500, B = 94"
[1] "n = 500, B = 95"
[1] "n = 500, B = 96"
[1] "n = 500, B = 97"
[1] "n = 500, B = 98"
[1] "n = 500, B = 99"
[1] "n = 500, B = 100"
[1] "n = 500, B = 101"
[1] "n = 500, B = 102"
[1] "n = 500, B = 103"
[1] "n = 500, B = 104"
[1] "n = 500, B = 105"
[1] "n = 500, B = 106"
[1] "n = 500, B = 107"
[1] "n = 500, B = 108"
[1] "n = 500, B = 109"
[1] "n = 500, B = 110"
[1] "n = 500, B = 111"
[1] "n = 500, B = 112"
[1] "n = 500, B = 113"
[1] "n = 500, B = 114"
[1] "n = 500, B = 115"
[1] "n = 500, B = 116"
[1] "n = 500, B = 117"
[1] "n = 500, B = 118"
[1] "n = 500, B = 119"
[1] "n = 500, B = 120"
[1] "n = 500, B = 121"
[1] "n = 500, B = 122"
[1] "n = 500, B = 123"
[1] "n = 500, B = 124"
[1] "n = 500, B = 125"
[1] "n = 500, B = 126"
[1] "n = 500, B = 127"
[1] "n = 500, B = 128"
[1] "n = 500, B = 129"
[1] "n = 500, B = 130"
[1] "n = 500, B = 131"
[1] "n = 500, B = 132"
[1] "n = 500, B = 133"
[1] "n = 500, B = 134"
[1] "n = 500, B = 135"
[1] "n = 500, B = 136"
[1] "n = 500, B = 137"
[1] "n = 500, B = 138"
[1] "n = 500, B = 139"
[1] "n = 500, B = 140"
[1] "n = 500, B = 141"
[1] "n = 500, B = 142"
[1] "n = 500, B = 143"
[1] "n = 500, B = 144"
[1] "n = 500, B = 145"
[1] "n = 500, B = 146"
[1] "n = 500, B = 147"
[1] "n = 500, B = 148"
[1] "n = 500, B = 149"
[1] "n = 500, B = 150"
[1] "n = 500, B = 151"
[1] "n = 500, B = 152"
[1] "n = 500, B = 153"
[1] "n = 500, B = 154"
[1] "n = 500, B = 155"
[1] "n = 500, B = 156"
[1] "n = 500, B = 157"
[1] "n = 500, B = 158"
[1] "n = 500, B = 159"
[1] "n = 500, B = 160"
[1] "n = 500, B = 161"
[1] "n = 500, B = 162"
[1] "n = 500, B = 163"
[1] "n = 500, B = 164"
[1] "n = 500, B = 165"
[1] "n = 500, B = 166"
[1] "n = 500, B = 167"
[1] "n = 500, B = 168"
[1] "n = 500, B = 169"
[1] "n = 500, B = 170"
[1] "n = 500, B = 171"
[1] "n = 500, B = 172"
[1] "n = 500, B = 173"
[1] "n = 500, B = 174"
[1] "n = 500, B = 175"
[1] "n = 500, B = 176"
[1] "n = 500, B = 177"
[1] "n = 500, B = 178"
[1] "n = 500, B = 179"
[1] "n = 500, B = 180"
[1] "n = 500, B = 181"
[1] "n = 500, B = 182"
[1] "n = 500, B = 183"
[1] "n = 500, B = 184"
[1] "n = 500, B = 185"
[1] "n = 500, B = 186"
[1] "n = 500, B = 187"
[1] "n = 500, B = 188"
[1] "n = 500, B = 189"
[1] "n = 500, B = 190"
[1] "n = 500, B = 191"
[1] "n = 500, B = 192"
[1] "n = 500, B = 193"
[1] "n = 500, B = 194"
[1] "n = 500, B = 195"
[1] "n = 500, B = 196"
[1] "n = 500, B = 197"
[1] "n = 500, B = 198"
[1] "n = 500, B = 199"
[1] "n = 500, B = 200"
[1] "n = 1000, B = 1"
[1] "n = 1000, B = 2"
[1] "n = 1000, B = 3"
[1] "n = 1000, B = 4"
[1] "n = 1000, B = 5"
[1] "n = 1000, B = 6"
[1] "n = 1000, B = 7"
[1] "n = 1000, B = 8"
[1] "n = 1000, B = 9"
[1] "n = 1000, B = 10"
[1] "n = 1000, B = 11"
[1] "n = 1000, B = 12"
[1] "n = 1000, B = 13"
[1] "n = 1000, B = 14"
[1] "n = 1000, B = 15"
[1] "n = 1000, B = 16"
[1] "n = 1000, B = 17"
[1] "n = 1000, B = 18"
[1] "n = 1000, B = 19"
[1] "n = 1000, B = 20"
[1] "n = 1000, B = 21"
[1] "n = 1000, B = 22"
[1] "n = 1000, B = 23"
[1] "n = 1000, B = 24"
[1] "n = 1000, B = 25"
[1] "n = 1000, B = 26"
[1] "n = 1000, B = 27"
[1] "n = 1000, B = 28"
[1] "n = 1000, B = 29"
[1] "n = 1000, B = 30"
[1] "n = 1000, B = 31"
[1] "n = 1000, B = 32"
[1] "n = 1000, B = 33"
[1] "n = 1000, B = 34"
[1] "n = 1000, B = 35"
[1] "n = 1000, B = 36"
[1] "n = 1000, B = 37"
[1] "n = 1000, B = 38"
[1] "n = 1000, B = 39"
[1] "n = 1000, B = 40"
[1] "n = 1000, B = 41"
[1] "n = 1000, B = 42"
[1] "n = 1000, B = 43"
[1] "n = 1000, B = 44"
[1] "n = 1000, B = 45"
[1] "n = 1000, B = 46"
[1] "n = 1000, B = 47"
[1] "n = 1000, B = 48"
[1] "n = 1000, B = 49"
[1] "n = 1000, B = 50"
[1] "n = 1000, B = 51"
[1] "n = 1000, B = 52"
[1] "n = 1000, B = 53"
[1] "n = 1000, B = 54"
[1] "n = 1000, B = 55"
[1] "n = 1000, B = 56"
[1] "n = 1000, B = 57"
[1] "n = 1000, B = 58"
[1] "n = 1000, B = 59"
[1] "n = 1000, B = 60"
[1] "n = 1000, B = 61"
[1] "n = 1000, B = 62"
[1] "n = 1000, B = 63"
[1] "n = 1000, B = 64"
[1] "n = 1000, B = 65"
[1] "n = 1000, B = 66"
[1] "n = 1000, B = 67"
[1] "n = 1000, B = 68"
[1] "n = 1000, B = 69"
[1] "n = 1000, B = 70"
[1] "n = 1000, B = 71"
[1] "n = 1000, B = 72"
[1] "n = 1000, B = 73"
[1] "n = 1000, B = 74"
[1] "n = 1000, B = 75"
[1] "n = 1000, B = 76"
[1] "n = 1000, B = 77"
[1] "n = 1000, B = 78"
[1] "n = 1000, B = 79"
[1] "n = 1000, B = 80"
[1] "n = 1000, B = 81"
[1] "n = 1000, B = 82"
[1] "n = 1000, B = 83"
[1] "n = 1000, B = 84"
[1] "n = 1000, B = 85"
[1] "n = 1000, B = 86"
[1] "n = 1000, B = 87"
[1] "n = 1000, B = 88"
[1] "n = 1000, B = 89"
[1] "n = 1000, B = 90"
[1] "n = 1000, B = 91"
[1] "n = 1000, B = 92"
[1] "n = 1000, B = 93"
[1] "n = 1000, B = 94"
[1] "n = 1000, B = 95"
[1] "n = 1000, B = 96"
[1] "n = 1000, B = 97"
[1] "n = 1000, B = 98"
[1] "n = 1000, B = 99"
[1] "n = 1000, B = 100"
[1] "n = 1000, B = 101"
[1] "n = 1000, B = 102"
[1] "n = 1000, B = 103"
[1] "n = 1000, B = 104"
[1] "n = 1000, B = 105"
[1] "n = 1000, B = 106"
[1] "n = 1000, B = 107"
[1] "n = 1000, B = 108"
[1] "n = 1000, B = 109"
[1] "n = 1000, B = 110"
[1] "n = 1000, B = 111"
[1] "n = 1000, B = 112"
[1] "n = 1000, B = 113"
[1] "n = 1000, B = 114"
[1] "n = 1000, B = 115"
[1] "n = 1000, B = 116"
[1] "n = 1000, B = 117"
[1] "n = 1000, B = 118"
[1] "n = 1000, B = 119"
[1] "n = 1000, B = 120"
[1] "n = 1000, B = 121"
[1] "n = 1000, B = 122"
[1] "n = 1000, B = 123"
[1] "n = 1000, B = 124"
[1] "n = 1000, B = 125"
[1] "n = 1000, B = 126"
[1] "n = 1000, B = 127"
[1] "n = 1000, B = 128"
[1] "n = 1000, B = 129"
[1] "n = 1000, B = 130"
[1] "n = 1000, B = 131"
[1] "n = 1000, B = 132"
[1] "n = 1000, B = 133"
[1] "n = 1000, B = 134"
[1] "n = 1000, B = 135"
[1] "n = 1000, B = 136"
[1] "n = 1000, B = 137"
[1] "n = 1000, B = 138"
[1] "n = 1000, B = 139"
[1] "n = 1000, B = 140"
[1] "n = 1000, B = 141"
[1] "n = 1000, B = 142"
[1] "n = 1000, B = 143"
[1] "n = 1000, B = 144"
[1] "n = 1000, B = 145"
[1] "n = 1000, B = 146"
[1] "n = 1000, B = 147"
[1] "n = 1000, B = 148"
[1] "n = 1000, B = 149"
[1] "n = 1000, B = 150"
[1] "n = 1000, B = 151"
[1] "n = 1000, B = 152"
[1] "n = 1000, B = 153"
[1] "n = 1000, B = 154"
[1] "n = 1000, B = 155"
[1] "n = 1000, B = 156"
[1] "n = 1000, B = 157"
[1] "n = 1000, B = 158"
[1] "n = 1000, B = 159"
[1] "n = 1000, B = 160"
[1] "n = 1000, B = 161"
[1] "n = 1000, B = 162"
[1] "n = 1000, B = 163"
[1] "n = 1000, B = 164"
[1] "n = 1000, B = 165"
[1] "n = 1000, B = 166"
[1] "n = 1000, B = 167"
[1] "n = 1000, B = 168"
[1] "n = 1000, B = 169"
[1] "n = 1000, B = 170"
[1] "n = 1000, B = 171"
[1] "n = 1000, B = 172"
[1] "n = 1000, B = 173"
[1] "n = 1000, B = 174"
[1] "n = 1000, B = 175"
[1] "n = 1000, B = 176"
[1] "n = 1000, B = 177"
[1] "n = 1000, B = 178"
[1] "n = 1000, B = 179"
[1] "n = 1000, B = 180"
[1] "n = 1000, B = 181"
[1] "n = 1000, B = 182"
[1] "n = 1000, B = 183"
[1] "n = 1000, B = 184"
[1] "n = 1000, B = 185"
[1] "n = 1000, B = 186"
[1] "n = 1000, B = 187"
[1] "n = 1000, B = 188"
[1] "n = 1000, B = 189"
[1] "n = 1000, B = 190"
[1] "n = 1000, B = 191"
[1] "n = 1000, B = 192"
[1] "n = 1000, B = 193"
[1] "n = 1000, B = 194"
[1] "n = 1000, B = 195"
[1] "n = 1000, B = 196"
[1] "n = 1000, B = 197"
[1] "n = 1000, B = 198"
[1] "n = 1000, B = 199"
[1] "n = 1000, B = 200"
[1] "n = 1500, B = 1"
[1] "n = 1500, B = 2"
[1] "n = 1500, B = 3"
[1] "n = 1500, B = 4"
[1] "n = 1500, B = 5"
[1] "n = 1500, B = 6"
[1] "n = 1500, B = 7"
[1] "n = 1500, B = 8"
[1] "n = 1500, B = 9"
[1] "n = 1500, B = 10"
[1] "n = 1500, B = 11"
[1] "n = 1500, B = 12"
[1] "n = 1500, B = 13"
[1] "n = 1500, B = 14"
[1] "n = 1500, B = 15"
[1] "n = 1500, B = 16"
[1] "n = 1500, B = 17"
[1] "n = 1500, B = 18"
[1] "n = 1500, B = 19"
[1] "n = 1500, B = 20"
[1] "n = 1500, B = 21"
[1] "n = 1500, B = 22"
[1] "n = 1500, B = 23"
[1] "n = 1500, B = 24"
[1] "n = 1500, B = 25"
[1] "n = 1500, B = 26"
[1] "n = 1500, B = 27"
[1] "n = 1500, B = 28"
[1] "n = 1500, B = 29"
[1] "n = 1500, B = 30"
[1] "n = 1500, B = 31"
[1] "n = 1500, B = 32"
[1] "n = 1500, B = 33"
[1] "n = 1500, B = 34"
[1] "n = 1500, B = 35"
[1] "n = 1500, B = 36"
[1] "n = 1500, B = 37"
[1] "n = 1500, B = 38"
[1] "n = 1500, B = 39"
[1] "n = 1500, B = 40"
[1] "n = 1500, B = 41"
[1] "n = 1500, B = 42"
[1] "n = 1500, B = 43"
[1] "n = 1500, B = 44"
[1] "n = 1500, B = 45"
[1] "n = 1500, B = 46"
[1] "n = 1500, B = 47"
[1] "n = 1500, B = 48"
[1] "n = 1500, B = 49"
[1] "n = 1500, B = 50"
[1] "n = 1500, B = 51"
[1] "n = 1500, B = 52"
[1] "n = 1500, B = 53"
[1] "n = 1500, B = 54"
[1] "n = 1500, B = 55"
[1] "n = 1500, B = 56"
[1] "n = 1500, B = 57"
[1] "n = 1500, B = 58"
[1] "n = 1500, B = 59"
[1] "n = 1500, B = 60"
[1] "n = 1500, B = 61"
[1] "n = 1500, B = 62"
[1] "n = 1500, B = 63"
[1] "n = 1500, B = 64"
[1] "n = 1500, B = 65"
[1] "n = 1500, B = 66"
[1] "n = 1500, B = 67"
[1] "n = 1500, B = 68"
[1] "n = 1500, B = 69"
[1] "n = 1500, B = 70"
[1] "n = 1500, B = 71"
[1] "n = 1500, B = 72"
[1] "n = 1500, B = 73"
[1] "n = 1500, B = 74"
[1] "n = 1500, B = 75"
[1] "n = 1500, B = 76"
[1] "n = 1500, B = 77"
[1] "n = 1500, B = 78"
[1] "n = 1500, B = 79"
[1] "n = 1500, B = 80"
[1] "n = 1500, B = 81"
[1] "n = 1500, B = 82"
[1] "n = 1500, B = 83"
[1] "n = 1500, B = 84"
[1] "n = 1500, B = 85"
[1] "n = 1500, B = 86"
[1] "n = 1500, B = 87"
[1] "n = 1500, B = 88"
[1] "n = 1500, B = 89"
[1] "n = 1500, B = 90"
[1] "n = 1500, B = 91"
[1] "n = 1500, B = 92"
[1] "n = 1500, B = 93"
[1] "n = 1500, B = 94"
[1] "n = 1500, B = 95"
[1] "n = 1500, B = 96"
[1] "n = 1500, B = 97"
[1] "n = 1500, B = 98"
[1] "n = 1500, B = 99"
[1] "n = 1500, B = 100"
[1] "n = 1500, B = 101"
[1] "n = 1500, B = 102"
[1] "n = 1500, B = 103"
[1] "n = 1500, B = 104"
[1] "n = 1500, B = 105"
[1] "n = 1500, B = 106"
[1] "n = 1500, B = 107"
[1] "n = 1500, B = 108"
[1] "n = 1500, B = 109"
[1] "n = 1500, B = 110"
[1] "n = 1500, B = 111"
[1] "n = 1500, B = 112"
[1] "n = 1500, B = 113"
[1] "n = 1500, B = 114"
[1] "n = 1500, B = 115"
[1] "n = 1500, B = 116"
[1] "n = 1500, B = 117"
[1] "n = 1500, B = 118"
[1] "n = 1500, B = 119"
[1] "n = 1500, B = 120"
[1] "n = 1500, B = 121"
[1] "n = 1500, B = 122"
[1] "n = 1500, B = 123"
[1] "n = 1500, B = 124"
[1] "n = 1500, B = 125"
[1] "n = 1500, B = 126"
[1] "n = 1500, B = 127"
[1] "n = 1500, B = 128"
[1] "n = 1500, B = 129"
[1] "n = 1500, B = 130"
[1] "n = 1500, B = 131"
[1] "n = 1500, B = 132"
[1] "n = 1500, B = 133"
[1] "n = 1500, B = 134"
[1] "n = 1500, B = 135"
[1] "n = 1500, B = 136"
[1] "n = 1500, B = 137"
[1] "n = 1500, B = 138"
[1] "n = 1500, B = 139"
[1] "n = 1500, B = 140"
[1] "n = 1500, B = 141"
[1] "n = 1500, B = 142"
[1] "n = 1500, B = 143"
[1] "n = 1500, B = 144"
[1] "n = 1500, B = 145"
[1] "n = 1500, B = 146"
[1] "n = 1500, B = 147"
[1] "n = 1500, B = 148"
[1] "n = 1500, B = 149"
[1] "n = 1500, B = 150"
[1] "n = 1500, B = 151"
[1] "n = 1500, B = 152"
[1] "n = 1500, B = 153"
[1] "n = 1500, B = 154"
[1] "n = 1500, B = 155"
[1] "n = 1500, B = 156"
[1] "n = 1500, B = 157"
[1] "n = 1500, B = 158"
[1] "n = 1500, B = 159"
[1] "n = 1500, B = 160"
[1] "n = 1500, B = 161"
[1] "n = 1500, B = 162"
[1] "n = 1500, B = 163"
[1] "n = 1500, B = 164"
[1] "n = 1500, B = 165"
[1] "n = 1500, B = 166"
[1] "n = 1500, B = 167"
[1] "n = 1500, B = 168"
[1] "n = 1500, B = 169"
[1] "n = 1500, B = 170"
[1] "n = 1500, B = 171"
[1] "n = 1500, B = 172"
[1] "n = 1500, B = 173"
[1] "n = 1500, B = 174"
[1] "n = 1500, B = 175"
[1] "n = 1500, B = 176"
[1] "n = 1500, B = 177"
[1] "n = 1500, B = 178"
[1] "n = 1500, B = 179"
[1] "n = 1500, B = 180"
[1] "n = 1500, B = 181"
[1] "n = 1500, B = 182"
[1] "n = 1500, B = 183"
[1] "n = 1500, B = 184"
[1] "n = 1500, B = 185"
[1] "n = 1500, B = 186"
[1] "n = 1500, B = 187"
[1] "n = 1500, B = 188"
[1] "n = 1500, B = 189"
[1] "n = 1500, B = 190"
[1] "n = 1500, B = 191"
[1] "n = 1500, B = 192"
[1] "n = 1500, B = 193"
[1] "n = 1500, B = 194"
[1] "n = 1500, B = 195"
[1] "n = 1500, B = 196"
[1] "n = 1500, B = 197"
[1] "n = 1500, B = 198"
[1] "n = 1500, B = 199"
[1] "n = 1500, B = 200"
[1] "n = 2000, B = 1"
[1] "n = 2000, B = 2"
[1] "n = 2000, B = 3"
[1] "n = 2000, B = 4"
[1] "n = 2000, B = 5"
[1] "n = 2000, B = 6"
[1] "n = 2000, B = 7"
[1] "n = 2000, B = 8"
[1] "n = 2000, B = 9"
[1] "n = 2000, B = 10"
[1] "n = 2000, B = 11"
[1] "n = 2000, B = 12"
[1] "n = 2000, B = 13"
[1] "n = 2000, B = 14"
[1] "n = 2000, B = 15"
[1] "n = 2000, B = 16"
[1] "n = 2000, B = 17"
[1] "n = 2000, B = 18"
[1] "n = 2000, B = 19"
[1] "n = 2000, B = 20"
[1] "n = 2000, B = 21"
[1] "n = 2000, B = 22"
[1] "n = 2000, B = 23"
[1] "n = 2000, B = 24"
[1] "n = 2000, B = 25"
[1] "n = 2000, B = 26"
[1] "n = 2000, B = 27"
[1] "n = 2000, B = 28"
[1] "n = 2000, B = 29"
[1] "n = 2000, B = 30"
[1] "n = 2000, B = 31"
[1] "n = 2000, B = 32"
[1] "n = 2000, B = 33"
[1] "n = 2000, B = 34"
[1] "n = 2000, B = 35"
[1] "n = 2000, B = 36"
[1] "n = 2000, B = 37"
[1] "n = 2000, B = 38"
[1] "n = 2000, B = 39"
[1] "n = 2000, B = 40"
[1] "n = 2000, B = 41"
[1] "n = 2000, B = 42"
[1] "n = 2000, B = 43"
[1] "n = 2000, B = 44"
[1] "n = 2000, B = 45"
[1] "n = 2000, B = 46"
[1] "n = 2000, B = 47"
[1] "n = 2000, B = 48"
[1] "n = 2000, B = 49"
[1] "n = 2000, B = 50"
[1] "n = 2000, B = 51"
[1] "n = 2000, B = 52"
[1] "n = 2000, B = 53"
[1] "n = 2000, B = 54"
[1] "n = 2000, B = 55"
[1] "n = 2000, B = 56"
[1] "n = 2000, B = 57"
[1] "n = 2000, B = 58"
[1] "n = 2000, B = 59"
[1] "n = 2000, B = 60"
[1] "n = 2000, B = 61"
[1] "n = 2000, B = 62"
[1] "n = 2000, B = 63"
[1] "n = 2000, B = 64"
[1] "n = 2000, B = 65"
[1] "n = 2000, B = 66"
[1] "n = 2000, B = 67"
[1] "n = 2000, B = 68"
[1] "n = 2000, B = 69"
[1] "n = 2000, B = 70"
[1] "n = 2000, B = 71"
[1] "n = 2000, B = 72"
[1] "n = 2000, B = 73"
[1] "n = 2000, B = 74"
[1] "n = 2000, B = 75"
[1] "n = 2000, B = 76"
[1] "n = 2000, B = 77"
[1] "n = 2000, B = 78"
[1] "n = 2000, B = 79"
[1] "n = 2000, B = 80"
[1] "n = 2000, B = 81"
[1] "n = 2000, B = 82"
[1] "n = 2000, B = 83"
[1] "n = 2000, B = 84"
[1] "n = 2000, B = 85"
[1] "n = 2000, B = 86"
[1] "n = 2000, B = 87"
[1] "n = 2000, B = 88"
[1] "n = 2000, B = 89"
[1] "n = 2000, B = 90"
[1] "n = 2000, B = 91"
[1] "n = 2000, B = 92"
[1] "n = 2000, B = 93"
[1] "n = 2000, B = 94"
[1] "n = 2000, B = 95"
[1] "n = 2000, B = 96"
[1] "n = 2000, B = 97"
[1] "n = 2000, B = 98"
[1] "n = 2000, B = 99"
[1] "n = 2000, B = 100"
[1] "n = 2000, B = 101"
[1] "n = 2000, B = 102"
[1] "n = 2000, B = 103"
[1] "n = 2000, B = 104"
[1] "n = 2000, B = 105"
[1] "n = 2000, B = 106"
[1] "n = 2000, B = 107"
[1] "n = 2000, B = 108"
[1] "n = 2000, B = 109"
[1] "n = 2000, B = 110"
[1] "n = 2000, B = 111"
[1] "n = 2000, B = 112"
[1] "n = 2000, B = 113"
[1] "n = 2000, B = 114"
[1] "n = 2000, B = 115"
[1] "n = 2000, B = 116"
[1] "n = 2000, B = 117"
[1] "n = 2000, B = 118"
[1] "n = 2000, B = 119"
[1] "n = 2000, B = 120"
[1] "n = 2000, B = 121"
[1] "n = 2000, B = 122"
[1] "n = 2000, B = 123"
[1] "n = 2000, B = 124"
[1] "n = 2000, B = 125"
[1] "n = 2000, B = 126"
[1] "n = 2000, B = 127"
[1] "n = 2000, B = 128"
[1] "n = 2000, B = 129"
[1] "n = 2000, B = 130"
[1] "n = 2000, B = 131"
[1] "n = 2000, B = 132"
[1] "n = 2000, B = 133"
[1] "n = 2000, B = 134"
[1] "n = 2000, B = 135"
[1] "n = 2000, B = 136"
[1] "n = 2000, B = 137"
[1] "n = 2000, B = 138"
[1] "n = 2000, B = 139"
[1] "n = 2000, B = 140"
[1] "n = 2000, B = 141"
[1] "n = 2000, B = 142"
[1] "n = 2000, B = 143"
[1] "n = 2000, B = 144"
[1] "n = 2000, B = 145"
[1] "n = 2000, B = 146"
[1] "n = 2000, B = 147"
[1] "n = 2000, B = 148"
[1] "n = 2000, B = 149"
[1] "n = 2000, B = 150"
[1] "n = 2000, B = 151"
[1] "n = 2000, B = 152"
[1] "n = 2000, B = 153"
[1] "n = 2000, B = 154"
[1] "n = 2000, B = 155"
[1] "n = 2000, B = 156"
[1] "n = 2000, B = 157"
[1] "n = 2000, B = 158"
[1] "n = 2000, B = 159"
[1] "n = 2000, B = 160"
[1] "n = 2000, B = 161"
[1] "n = 2000, B = 162"
[1] "n = 2000, B = 163"
[1] "n = 2000, B = 164"
[1] "n = 2000, B = 165"
[1] "n = 2000, B = 166"
[1] "n = 2000, B = 167"
[1] "n = 2000, B = 168"
[1] "n = 2000, B = 169"
[1] "n = 2000, B = 170"
[1] "n = 2000, B = 171"
[1] "n = 2000, B = 172"
[1] "n = 2000, B = 173"
[1] "n = 2000, B = 174"
[1] "n = 2000, B = 175"
[1] "n = 2000, B = 176"
[1] "n = 2000, B = 177"
[1] "n = 2000, B = 178"
[1] "n = 2000, B = 179"
[1] "n = 2000, B = 180"
[1] "n = 2000, B = 181"
[1] "n = 2000, B = 182"
[1] "n = 2000, B = 183"
[1] "n = 2000, B = 184"
[1] "n = 2000, B = 185"
[1] "n = 2000, B = 186"
[1] "n = 2000, B = 187"
[1] "n = 2000, B = 188"
[1] "n = 2000, B = 189"
[1] "n = 2000, B = 190"
[1] "n = 2000, B = 191"
[1] "n = 2000, B = 192"
[1] "n = 2000, B = 193"
[1] "n = 2000, B = 194"
[1] "n = 2000, B = 195"
[1] "n = 2000, B = 196"
[1] "n = 2000, B = 197"
[1] "n = 2000, B = 198"
[1] "n = 2000, B = 199"
[1] "n = 2000, B = 200"
There were 50 or more warnings (use warnings() to see the first 50)
> 
> write.csv(res_df, "out/atmle_seq_ate" %+% "_" %+% timestamp %+% ".csv", row.names = FALSE)
> 
> proc.time()
     user    system   elapsed 
83139.788  3807.006 48081.914 
